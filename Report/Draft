Part j
The Integrated Algorithm guarantees that no state is expanded more than twice by maintaining two closed lists, an anchor list and a non-anchor list. A node is only expanded by a search if it is not a member of that closed list. If the anchor heuristic expands the node first, the node is never re-expanded because the algorithm checks if the node exists in the anchor closed list before checking the non-anchor list (line --- in IntegratedAStarSearch). The base condition to expand a node is that the g is lowered (line --- in IntegratedAStarSearch). Then if the node does not exist in the anchor’s closed list, it can be expanded by the anchor regardless if the node was already expanded in non-anchor list.

Part h
Current Implementation (efficiency):
	•	HashMap 
		o	 Insert/update - > O(1) (unlike priority queue doesn’t need remove to update)
		o	Top/MinKey -> O(n) 
		o	Node is not cloned across open lists
	•	Sequential Algorithm only initializes arrays (within the node object) that are needed to store the values for each heuristic for nodes that are expanded
 
